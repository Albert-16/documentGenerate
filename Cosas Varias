using AsmxServiceReference;

namespace AsmxServiceSdk;

public interface IEmailSenderClient
{
    Task<setProviderResponse> SetProviderAsync(string action, string provider, string correo, string password, string metodo, string host, string port);
    Task<SendMailResponse> SendMailAsync(string guidCode, string shippingDate);
    Task<Base64AttachResponse> Base64AttachAsync(string guidCode, string shippingDate, string base64File, string fileName);
    Task<AddTextResponse> AddTextAsync(string guidCode, string shippingDate, string subject, string textBody);
    Task<CreateMailResponse> CreateMailAsync(string origin, string system, string template, string adresses, string parameterList, string holdMailShipment);
    Task<AddFilesResponse> AddFilesAsync(string guidCode, string shippingDate, string fileList);
    Task<AddAdressesResponse> AddAdressesAsync(string guidCode, string shippingDate, string addressList);
}

public sealed class EmailSenderClient : IEmailSenderClient
{
    private readonly WSDL_BAN_MS_12_EmailSenderSoapClient _client;

    public EmailSenderClient()
    {
        // usar el endpoint generado (Soap12 por defecto es recomendable)
        _client = new WSDL_BAN_MS_12_EmailSenderSoapClient(
            WSDL_BAN_MS_12_EmailSenderSoapClient.EndpointConfiguration.WSDL_BAN_MS_12_EmailSenderSoap12
        );
    }

    public Task<setProviderResponse> SetProviderAsync(string action, string provider, string correo, string password, string metodo, string host, string port)
        => _client.setProviderAsync(action, provider, correo, password, metodo, host, port);

    public Task<SendMailResponse> SendMailAsync(string guidCode, string shippingDate)
        => _client.SendMailAsync(guidCode, shippingDate);

    public Task<Base64AttachResponse> Base64AttachAsync(string guidCode, string shippingDate, string base64File, string fileName)
        => _client.Base64AttachAsync(guidCode, shippingDate, base64File, fileName);

    public Task<AddTextResponse> AddTextAsync(string guidCode, string shippingDate, string subject, string textBody)
        => _client.AddTextAsync(guidCode, shippingDate, subject, textBody);

    public Task<CreateMailResponse> CreateMailAsync(string origin, string system, string template, string adresses, string parameterList, string holdMailShipment)
        => _client.CreateMailAsync(origin, system, template, adresses, parameterList, holdMailShipment);

    public Task<AddFilesResponse> AddFilesAsync(string guidCode, string shippingDate, string fileList)
        => _client.AddFilesAsync(guidCode, shippingDate, fileList);

    public Task<AddAdressesResponse> AddAdressesAsync(string guidCode, string shippingDate, string addressList)
        => _client.AddAdressesAsync(guidCode, shippingDate, addressList);
}
