using System;
using System.IO;
using System.IO.Compression;

namespace Domain.Helpers
{
    public static class AttachmentHelper
    {
        /// <summary>
        /// Convierte un arreglo de bytes en GZip y lo retorna como Base64.
        /// </summary>
        /// <param name="fileBytes">Bytes del archivo original.</param>
        /// <returns>String Base64 del archivo comprimido.</returns>
        public static string ConvertAttachmentToBase64(byte[] fileBytes)
        {
            if (fileBytes == null || fileBytes.Length == 0)
                throw new ArgumentException("El contenido del archivo no puede estar vacío.", nameof(fileBytes));

            try
            {
                using (var outputStream = new MemoryStream())
                {
                    using (var gzipStream = new GZipStream(outputStream, CompressionLevel.Optimal, leaveOpen: true))
                    {
                        gzipStream.Write(fileBytes, 0, fileBytes.Length);
                    }

                    // Convertir a Base64 el resultado comprimido
                    return Convert.ToBase64String(outputStream.ToArray());
                }
            }
            catch (Exception ex)
            {
                throw new InvalidOperationException("Error al comprimir el archivo en GZip.", ex);
            }
        }

        /// <summary>
        /// Convierte un archivo (ruta) directamente en GZip Base64.
        /// </summary>
        /// <param name="filePath">Ruta del archivo.</param>
        /// <returns>String Base64 comprimido.</returns>
        public static string ConvertAttachmentToBase64(string filePath)
        {
            if (string.IsNullOrWhiteSpace(filePath))
                throw new ArgumentException("La ruta del archivo no puede estar vacía.", nameof(filePath));

            if (!File.Exists(filePath))
                throw new FileNotFoundException("No se encontró el archivo especificado.", filePath);

            byte[] fileBytes = File.ReadAllBytes(filePath);
            return ConvertAttachmentToBase64(fileBytes);
        }
    }
}
