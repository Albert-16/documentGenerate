using System.IO;
using MigraDoc.DocumentObjectModel;
using MigraDoc.DocumentObjectModel.Tables;
using MigraDoc.DocumentObjectModel.Shapes;

/// Bloque de DOS firmas (Banco/Cliente) con reserva de espacio si no hay firma del banco.
public static void AgregarFirmasDosColumnas(
    Section sec,
    string etiquetaBanco = "El Banco",
    string etiquetaCliente = "El Cliente",
    string textoSobreLineaCliente = "Aceptado Digitalmente",
    string rutaFirmaBanco = null,        // opcional (si es null/!existe, se reserva espacio)
    double anchoFirmaCm = 3.0,
    double alturaAntesLineaCm = 1.2,     // ← reserva de alto cuando NO hay imagen (y en cliente)
    double anchoColumnaCm = 7.5,
    double espacioAntesCm = 0.4,
    double espacioDespuesCm = 0.4,
    double grosorLineaPt = 0.5,
    double tamFuente = 11
)
{
    // Espacio superior
    if (espacioAntesCm > 0)
        sec.AddParagraph().Format.SpaceBefore = $"{espacioAntesCm}cm";

    // Tabla 2 columnas
    var tabla = sec.AddTable();
    tabla.Borders.Width = 0;
    tabla.AddColumn(Unit.FromCentimeter(anchoColumnaCm)); // Banco
    tabla.AddColumn(Unit.FromCentimeter(anchoColumnaCm)); // Cliente

    var fila = tabla.AddRow();
    fila.TopPadding = "0.2cm";
    fila.BottomPadding = "0.2cm";
    fila.VerticalAlignment = VerticalAlignment.Top;

    // ===== Columna IZQUIERDA (Banco) =====
    bool hayFirmaBanco = !string.IsNullOrWhiteSpace(rutaFirmaBanco) && File.Exists(rutaFirmaBanco);
    if (hayFirmaBanco)
    {
        var img = fila.Cells[0].AddImage(rutaFirmaBanco);
        img.LockAspectRatio = true;
        img.Width = Unit.FromCentimeter(anchoFirmaCm);
        img.Top = ShapePosition.Top;
        img.Left = ShapePosition.Center;
        // Un pequeño aire bajo la imagen
        fila.Cells[0].AddParagraph().Format.SpaceBefore = "0.2cm";
    }
    else
    {
        // ← Reserva de espacio cuando NO hay imagen
        var spacerBanco = fila.Cells[0].AddParagraph();
        spacerBanco.Format.SpaceBefore = $"{alturaAntesLineaCm}cm";
    }

    // Línea banco
    var pLineaBanco = fila.Cells[0].AddParagraph();
    pLineaBanco.Format.Alignment = ParagraphAlignment.Center;
    pLineaBanco.Format.Borders.Bottom.Width = grosorLineaPt;
    pLineaBanco.Format.Borders.Bottom.Color = Colors.Gray;
    pLineaBanco.Format.SpaceAfter = "0.15cm";

    // Etiqueta banco
    var pBanco = fila.Cells[0].AddParagraph(etiquetaBanco);
    pBanco.Format.Alignment = ParagraphAlignment.Center;
    pBanco.Format.Font.Size = tamFuente;

    // ===== Columna DERECHA (Cliente) =====
    // Reserva de espacio SIMÉTRICA para alinear la línea con la del banco
    var spacerCliente = fila.Cells[1].AddParagraph();
    spacerCliente.Format.SpaceBefore = $"{alturaAntesLineaCm}cm";

    // Texto “firma” arriba
    var pArriba = fila.Cells[1].AddParagraph(textoSobreLineaCliente);
    pArriba.Format.Alignment = ParagraphAlignment.Center;
    pArriba.Format.Font.Size = tamFuente;
    pArriba.Format.SpaceAfter = "0.2cm";

    // Línea cliente
    var pLineaCliente = fila.Cells[1].AddParagraph();
    pLineaCliente.Format.Alignment = ParagraphAlignment.Center;
    pLineaCliente.Format.Borders.Bottom.Width = grosorLineaPt;
    pLineaCliente.Format.Borders.Bottom.Color = Colors.Gray;
    pLineaCliente.Format.SpaceAfter = "0.15cm";

    // Etiqueta cliente
    var pCliente = fila.Cells[1].AddParagraph(etiquetaCliente);
    pCliente.Format.Alignment = ParagraphAlignment.Center;
    pCliente.Format.Font.Size = tamFuente;

    // Espacio inferior
    if (espacioDespuesCm > 0)
        sec.AddParagraph().Format.SpaceBefore = $"{espacioDespuesCm}cm";
}
