using MigraDoc.DocumentObjectModel;
using MigraDoc.DocumentObjectModel.Tables;
using MigraDoc.DocumentObjectModel.Shapes;

// Conversión segura a centímetros (funciona en todas las versiones de MigraDoc)
private static double Cm(Unit u) => u / Unit.FromCentimeter(1);

private void AgregarBloqueFirmasDosColumnasV2(
    Section sec,
    string etiquetaBanco = "El Banco",
    string textoFirmaClienteArriba = "Aceptado Digitalmente",
    string etiquetaClienteAbajo = "El Cliente",
    string rutaFirmaBanco = null,          // opcional
    string rutaFirmaCliente = null,        // opcional
    double anchoFirmaCm = 2.5,
    double separadorCentralCm = 1.0,       // columna separadora
    double alturaAntesDeLineaCm = 1.2,     // controla dónde cae la línea (mismo valor a ambos lados)
    double grosorLineaPt = 0.5,
    double tamFuente = 11
)
{
    // ----- Ancho útil (página - márgenes), todo en cm -----
    var anchoUtilCm = Cm(sec.PageSetup.PageWidth - sec.PageSetup.LeftMargin - sec.PageSetup.RightMargin);
    var colWidthCm  = (anchoUtilCm - separadorCentralCm) / 2.0;

    // ----- Tabla principal: [Banco] [Separador] [Cliente] -----
    var t = sec.AddTable();
    t.Borders.Width = 0;

    var colIzq = t.AddColumn(Unit.FromCentimeter(colWidthCm));
    var colSep = t.AddColumn(Unit.FromCentimeter(separadorCentralCm));
    var colDer = t.AddColumn(Unit.FromCentimeter(colWidthCm));

    var row = t.AddRow();
    row.TopPadding = "0.2cm";
    row.BottomPadding = "0.2cm";
    row.VerticalAlignment = VerticalAlignment.Top;

    // ========= LADO BANCO (tabla anidada) =========
    var bank = row.Cells[0].Elements.AddTable() as Table;
    bank.Borders.Width = 0;
    bank.AddColumn(Unit.FromCentimeter(colWidthCm));

    // Fila 0: espacio superior (altura fija). Si hay imagen, queda pegada abajo.
    var b0 = bank.AddRow();
    b0.Height = Unit.FromCentimeter(alturaAntesDeLineaCm);
    b0.HeightRule = RowHeightRule.Exactly;
    b0.VerticalAlignment = VerticalAlignment.Bottom;

    if (!string.IsNullOrWhiteSpace(rutaFirmaBanco))
    {
        var pImg = b0.Cells[0].AddParagraph();
        var imgB = pImg.AddImage(rutaFirmaBanco);
        imgB.LockAspectRatio = true;
        imgB.Width = Unit.FromCentimeter(anchoFirmaCm);
        pImg.Format.Alignment = ParagraphAlignment.Center;
    }

    // Fila 1: línea de firma
    var b1 = bank.AddRow();
    var pLineaBanco = b1.Cells[0].AddParagraph();
    pLineaBanco.Format.Borders.Bottom.Width = grosorLineaPt;
    pLineaBanco.Format.Borders.Bottom.Color = Colors.Gray;
    pLineaBanco.Format.SpaceAfter = "0.15cm";

    // Fila 2: etiqueta bajo la línea
    var b2 = bank.AddRow();
    var pBanco = b2.Cells[0].AddParagraph(etiquetaBanco);
    pBanco.Format.Alignment = ParagraphAlignment.Center;
    pBanco.Format.Font.Size = tamFuente;

    // ========= SEPARADOR CENTRAL =========
    row.Cells[1].AddParagraph(); // aire

    // ========= LADO CLIENTE (tabla anidada) =========
    var cli = row.Cells[2].Elements.AddTable() as Table;
    cli.Borders.Width = 0;
    cli.AddColumn(Unit.FromCentimeter(colWidthCm));

    // Fila 0: espacio superior con el texto “firma” abajo
    var c0 = cli.AddRow();
    c0.Height = Unit.FromCentimeter(alturaAntesDeLineaCm);
    c0.HeightRule = RowHeightRule.Exactly;
    c0.VerticalAlignment = VerticalAlignment.Bottom;

    var pArriba = c0.Cells[0].AddParagraph(textoFirmaClienteArriba);
    pArriba.Format.Alignment = ParagraphAlignment.Center;
    pArriba.Format.Font.Size = tamFuente;

    if (!string.IsNullOrWhiteSpace(rutaFirmaCliente))
    {
        var imgC = c0.Cells[0].AddImage(rutaFirmaCliente);
        imgC.LockAspectRatio = true;
        imgC.Width = Unit.FromCentimeter(anchoFirmaCm);
        imgC.Top = ShapePosition.Bottom;
        imgC.Left = ShapePosition.Center;
    }

    // Fila 1: línea de firma
    var c1 = cli.AddRow();
    var pLineaCli = c1.Cells[0].AddParagraph();
    pLineaCli.Format.Borders.Bottom.Width = grosorLineaPt;
    pLineaCli.Format.Borders.Bottom.Color = Colors.Gray;
    pLineaCli.Format.SpaceAfter = "0.15cm";

    // Fila 2: etiqueta bajo la línea
    var c2 = cli.AddRow();
    var pCliente = c2.Cells[0].AddParagraph(etiquetaClienteAbajo);
    pCliente.Format.Alignment = ParagraphAlignment.Center;
    pCliente.Format.Font.Size = tamFuente;
}
